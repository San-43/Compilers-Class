#pragma GCC optimize("Ofast,unroll-loops,no-stack-protector")
#include <bits/stdc++.h>

using namespace std;

using ll = long long;
using ull = unsigned long long;
using vi = vector<ll>;

#define sz(x) int(x.size())
#define fi first
#define se second
#define pb push_back
#define end '\n'

constexpr long long LLINF = 2e18;
constexpr int INF = 2e9;
constexpr int MOD = 1e9 + 7;
constexpr int MxN = 2e5 + 5;
constexpr int dx[4] = {1, 0, -1, 0}, dy[4] = {0, 1, 0, -1};

void solve() {
    string s;
    cin >> s;

    int n;
    cin >> n;
    for (size_t i = 0; i < n; i++)
    {
        string tmp;
        cin >> tmp;
        int count = 0;
        if(tmp.length() % s.length() != 0) {
            cout << "No" << end;
            continue;
        }

        bool ok = false;
        for(int j = 0; j < tmp.length(); j++, count++) {
            if(tmp[j] != s[j % s.length()]) {
                ok = true;
            }
        }
        
        ok ? cout << "No\n" : cout << "Yes\n";
    }
    
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);

    int t = 1;
    while (t--) {
        solve();
    }
    return 0;
}